<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.TProjectUserMapper">
    
    <resultMap type="TProjectUser" id="TProjectUserResult">
        <result property="id"    column="id"    />
        <result property="projectId"    column="project_id"    />
        <result property="projectName" column="projectName" />
        <result property="userId"    column="user_id"    />
        <result property="userName" column="user_name" />
        <result property="remark"    column="remark"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectTProjectUserVo">
        select
        tpu.id,
        tpu.project_id,
        tp.name projectName,
        tpu.user_id,
        su.user_name,
        tpu.remark,
        tpu.create_by,
        tpu.create_time,
        tpu.update_by,
        tpu.update_time
        from
        t_project_user tpu,
        t_project tp ,
        sys_user su
    </sql>

    <select id="selectTProjectUserList" parameterType="TProjectUser" resultMap="TProjectUserResult">
        <include refid="selectTProjectUserVo"/>
        <where>
            tpu.project_id = tp.id
            and tpu.user_id = su.user_id
            <if test="projectId != null "> and tpu.project_id = #{projectId}</if>
            <if test="userId != null "> and su.user_id = #{userId}</if>
        </where>
    </select>
    
    <select id="selectTProjectUserById" parameterType="Long" resultMap="TProjectUserResult">
        <include refid="selectTProjectUserVo"/>
        where id = #{id}
    </select>

    <insert id="insertTProjectUser" parameterType="TProjectUser" useGeneratedKeys="true" keyProperty="id">
        insert into t_project_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="projectId != null">project_id,</if>
            <if test="userId != null">user_id,</if>
            <if test="remark != null">remark,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="projectId != null">#{projectId},</if>
            <if test="userId != null">#{userId},</if>
            <if test="remark != null">#{remark},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateTProjectUser" parameterType="TProjectUser">
        update t_project_user
        <trim prefix="SET" suffixOverrides=",">
            <if test="projectId != null">project_id = #{projectId},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTProjectUserById" parameterType="Long">
        delete from t_project_user where id = #{id}
    </delete>

    <delete id="deleteTProjectUserByIds" parameterType="String">
        delete from t_project_user where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>